# //NOTE:
#   - build context is alongside the .sln file so we can build our containers using class libraries in other folders. This enables each project to contain its Dockerfile yet access the nearby folders

version: "3.4"
services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    user: "1000:1000"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./prometheus/:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
    restart: always
    network_mode: host

  #    deploy:
  #      placement:
  #        constraints:
  #          - node.hostname == ${HOSTNAME}
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    user: "1000"
    #command:
    environment:
      - GF_SECURITY_ADMIN_PASSWORDDD=admin
    restart: always
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    network_mode: host

  cadvisor:
    container_name: cadvisor
    image: google/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 9085:8080
    restart: always
    deploy:
      mode: global

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:latest
    ports:
      - 9086:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    restart: always
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"
  #    deploy:
  #      placement:
  #        constraints:
  #          - node.hostname == ${HOSTNAME}

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/hos                                    t/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: always
    deploy:
      mode: global

  zaproxy:
    container_name: zaproxy
    image: owasp/zap2docker-stable
    user: "zap"
    ports:
      - 8080:8080
    # network_mode: host
    command: zap-webswing.sh
    # command: zap.sh -daemon -host 0.0.0.0 -port 8080 -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true -config api.key=123456

  identityserver:
    container_name: yournamespaceidentityserver
    build:
      context: ../
      dockerfile: ./server/Your.Namespace.IdentityServer/Dockerfile
      # target: debug

      args:
        hello: "world"
    restart: "unless-stopped"
    network_mode: host
    environment:
      - ASPNETCORE_ENVIRONMENT=development
      - ASPNETCORE_URLS=https://+;http://+
      - ASPNETCORE_HTTPS_PORT=9083
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/yourentirenamespace.pfx
    volumes:
      - ${HOME}/.aspnet/https:/https
    ports:
      - "9082:9082"
      - "9083:9083"

  yournamespaceapi:
    container_name: yournamespaceapi
    build:
      context: ../
      dockerfile: ./server/Your.Namespace.Api/Dockerfile
      # target: debug

      args:
        hello: "world"
    restart: "unless-stopped"
    network_mode: host
    environment:
      - ASPNETCORE_ENVIRONMENT=development
      - ASPNETCORE_URLS=https://+;http://+
      - ASPNETCORE_HTTPS_PORT=9081
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/yourentirenamespace.pfx
    volumes:
      - ${HOME}/.aspnet/https:/https
    ports:
      - "9082:9080"
      - "9083:9081"
