# //NOTE:
#   - build context is alongside the .sln file so we can build our containers using class libraries in other folders. This enables each project to contain its Dockerfile yet access the nearby folders

version: "3.4"
services:
  mailserver:
    image: docker.io/mailserver/docker-mailserver:latest
    hostname: localhost
    domainname: localhost
    container_name: mailserver
    env_file: ./mailserver/mailserver.env
    # To avoid conflicts with yaml base-60 float, DO NOT remove the quotation marks.
    # More information about the mailserver ports:
    # https://docker-mailserver.github.io/docker-mailserver/edge/config/security/understanding-the-ports/
    # ports:
    #   - "25:25" # SMTP  (explicit TLS => STARTTLS)
    #   - "143:143" # IMAP4 (explicit TLS => STARTTLS)
    #   - "465:465" # ESMTP (implicit TLS)
    #   - "587:587" # ESMTP (explicit TLS => STARTTLS)
    #   - "993:993" # IMAP4 (implicit TLS)
    network_mode: host
    volumes:
      - ./mailserver/maildata:/var/mail
      - ./mailserver/mailstate:/var/mail-state
      - ./mailserver/maillogs:/var/log/mail
      - /etc/localtime:/etc/localtime:ro
      - ./mailserver/config/:/tmp/docker-mailserver/
    restart: always
    stop_grace_period: 1m
    cap_add: ["NET_ADMIN", "SYS_PTRACE"]

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    user: "1000:1000"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./prometheus/:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    # ports:
    #   - 9090:9090
    network_mode: host
    depends_on:
      - cadvisor
    restart: always

  #    deploy:
  #      placement:
  #        constraints:
  #          - node.hostname == ${HOSTNAME}
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    user: "1000"
    #command:
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: always
    # ports:
    #   - "3000:3000"
    network_mode: host
    volumes:
      - ./grafana/:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    # ports:
    #   - 8080:8080
    network_mode: host
    restart: always
    deploy:
      mode: global
    privileged: true

  alertmanager:
    container_name: alertmanager
    image: quay.io/prometheus/alertmanager:latest
    # ports:
    #   - 9093:9093
    network_mode: host
    volumes:
      - ./alertmanager/alertmanager/:/etc/alertmanager/
      - ./alertmanager/amtool/:/etc/amtool/
      - ./alertmanager/storage/:/alertmanager/
    restart: always
    depends_on:
      - mailserver
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      #- "--storage.path=/etc/alertmanager/storage"
  #    deploy:
  #      placement:
  #        constraints:
  #          - node.hostname == ${HOSTNAME}

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    # ports:
    #   - 9100:9100
    network_mode: host
    restart: always
    deploy:
      mode: global

  plantuml:
    image: "plantuml/plantuml-server:jetty"
    container_name: plantuml
    command:
      - "-Djetty.port=9999"
    network_mode: host

  dockerregistry:
    image: registry:2
    container_name: dockerregistry
    network_mode: host
    restart: always
    env_file: ./docker-registry/.env
    volumes:
      - ./docker-registry/:/var/lib/registry

  gitlab:
    image: "gitlab/gitlab-ee:latest"
    restart: always
    hostname: "localhost"
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://localhost'
    # ports:
    #   - "80:80"
    #   - "443:443"
    #   - "22:22"
    network_mode: host
    volumes:
      - "./gitlab/config:/etc/gitlab"
      - "./gitlab/logs:/var/log/gitlab"
      - "./gitlab/data:/var/opt/gitlab"

  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    container_name: gitlab-runner
    restart: always
    volumes:
      - ./gitlab-runner/config:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: host

  # zaproxy:
  #   container_name: zaproxy
  #   image: owasp/zap2docker-stable
  #   user: "zap"
  #   ports:
  #     - 8080:8080
  #   # network_mode: host
  #   command: zap-webswing.sh
  #   # command: zap.sh -daemon -host 0.0.0.0 -port 8080 -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true -config api.key=123456

  # identityserver:
  #   container_name: yournamespaceidentityserver
  #   build:
  #     context: ../
  #     dockerfile: ./server/Your.Namespace.IdentityServer/Dockerfile
  #     # target: debug

  #     args:
  #       hello: "world"
  #   restart: "unless-stopped"
  #   network_mode: host
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=development
  #     - ASPNETCORE_URLS=https://+;http://+
  #     - ASPNETCORE_HTTPS_PORT=9083
  #     - ASPNETCORE_Kestrel__Certificates__Default__Password=password
  #     - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/yourentirenamespace.pfx
  #   volumes:
  #     - ${HOME}/.aspnet/https:/https
  #   ports:
  #     - "9082:9082"
  #     - "9083:9083"

  # yournamespaceapi:
  #   container_name: yournamespaceapi
  #   build:
  #     context: ../
  #     dockerfile: ./server/Your.Namespace.Api/Dockerfile
  #     # target: debug

  #     args:
  #       hello: "world"
  #   restart: "unless-stopped"
  #   network_mode: host
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=development
  #     - ASPNETCORE_URLS=https://+;http://+
  #     - ASPNETCORE_HTTPS_PORT=9081
  #     - ASPNETCORE_Kestrel__Certificates__Default__Password=password
  #     - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/yourentirenamespace.pfx
  #   volumes:
  #     - ${HOME}/.aspnet/https:/https
  #   ports:
  #     - "9082:9080"
  #     - "9083:9081"
